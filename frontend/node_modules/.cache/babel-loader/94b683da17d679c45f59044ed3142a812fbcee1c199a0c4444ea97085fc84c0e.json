{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/Udacity/cd0037-API-Development-and-Documentation-project/frontend/src/components/QuestionView.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\nclass QuestionView extends Component {\n  constructor() {\n    super();\n    this.getQuestions = () => {\n      $.ajax({\n        url: `/questions?page=${this.state.page}`,\n        //TODO: update request URL\n        type: 'GET',\n        success: result => {\n          console.log('result', result);\n          // this.setState({\n          //   questions: result.questions,\n          //   totalQuestions: result.total_questions,\n          //   categories: result.categories,\n          //   currentCategory: result.current_category,\n          // });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n    this.getByCategory = id => {\n      $.ajax({\n        url: `/categories/${id}/questions`,\n        //TODO: update request URL\n        type: 'GET',\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n    this.submitSearch = searchTerm => {\n      $.ajax({\n        url: `/questions`,\n        //TODO: update request URL\n        type: 'POST',\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          searchTerm: searchTerm\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n    this.questionAction = id => action => {\n      if (action === 'DELETE') {\n        if (window.confirm('are you sure you want to delete the question?')) {\n          $.ajax({\n            url: `/questions/${id}`,\n            //TODO: update request URL\n            type: 'DELETE',\n            success: result => {\n              this.getQuestions();\n            },\n            error: error => {\n              alert('Unable to load questions. Please try your request again');\n              return;\n            }\n          });\n        }\n      }\n    };\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null\n    };\n  }\n  componentDidMount() {\n    this.getQuestions();\n  }\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getQuestions());\n  }\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(/*#__PURE__*/React.createElement(\"span\", {\n        key: i,\n        className: `page-num ${i === this.state.page ? 'active' : ''}`,\n        onClick: () => {\n          this.selectPage(i);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, i));\n    }\n    return pageNumbers;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"categories-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      onClick: () => {\n        this.getQuestions();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Categories\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, Object.keys(this.state.categories).map(id => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      onClick: () => {\n        this.getByCategory(id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, this.state.categories[id], /*#__PURE__*/React.createElement(\"img\", {\n      className: \"category\",\n      alt: `${this.state.categories[id].toLowerCase()}`,\n      src: `${this.state.categories[id].toLowerCase()}.svg`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Search, {\n      submitSearch: this.submitSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \"Questions\"), this.state.questions.map((q, ind) => /*#__PURE__*/React.createElement(Question, {\n      key: q.id,\n      question: q.question,\n      answer: q.answer,\n      category: this.state.categories[q.category],\n      difficulty: q.difficulty,\n      questionAction: this.questionAction(q.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, this.createPagination())));\n  }\n}\nexport default QuestionView;","map":{"version":3,"names":["React","Component","Question","Search","$","QuestionView","constructor","getQuestions","ajax","url","state","page","type","success","result","console","log","error","alert","getByCategory","id","setState","questions","totalQuestions","total_questions","currentCategory","current_category","submitSearch","searchTerm","dataType","contentType","data","JSON","stringify","xhrFields","withCredentials","crossDomain","questionAction","action","window","confirm","categories","componentDidMount","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","render","Object","keys","map","alt","toLowerCase","src","q","ind","question","answer","category","difficulty"],"sources":["/Users/admin/Downloads/Udacity/cd0037-API-Development-and-Documentation-project/frontend/src/components/QuestionView.js"],"sourcesContent":["import React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        console.log('result', result)\n        // this.setState({\n        //   questions: result.questions,\n        //   totalQuestions: result.total_questions,\n        //   categories: result.categories,\n        //   currentCategory: result.current_category,\n        // });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  selectPage(num) {\n    this.setState({ page: num }, () => this.getQuestions());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {\n            this.selectPage(i);\n          }}\n        >\n          {i}\n        </span>\n      );\n    }\n    return pageNumbers;\n  }\n\n  getByCategory = (id) => {\n    $.ajax({\n      url: `/categories/${id}/questions`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: `/questions`, //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({ searchTerm: searchTerm }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  questionAction = (id) => (action) => {\n    if (action === 'DELETE') {\n      if (window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `/questions/${id}`, //TODO: update request URL\n          type: 'DELETE',\n          success: (result) => {\n            this.getQuestions();\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again');\n            return;\n          },\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className='question-view'>\n        <div className='categories-list'>\n          <h2\n            onClick={() => {\n              this.getQuestions();\n            }}\n          >\n            Categories\n          </h2>\n          <ul>\n            {Object.keys(this.state.categories).map((id) => (\n              <li\n                key={id}\n                onClick={() => {\n                  this.getByCategory(id);\n                }}\n              >\n                {this.state.categories[id]}\n                <img\n                  className='category'\n                  alt={`${this.state.categories[id].toLowerCase()}`}\n                  src={`${this.state.categories[id].toLowerCase()}.svg`}\n                />\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch} />\n        </div>\n        <div className='questions-list'>\n          <h2>Questions</h2>\n          {this.state.questions.map((q, ind) => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category]}\n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className='pagination-menu'>{this.createPagination()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}